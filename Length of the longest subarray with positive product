//{ Driver Code Starts
//Initial Template for C++



#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution {
    public:
        int solve(vector<int> &arr,int l,int r)
        {
            int fneg=r+1,lastneg=l-1;
            int neg=0;
            for(int i=l;i<=r;i++)
            {
                if(arr[i]<0 ) {neg++;fneg=min(fneg,i);lastneg=max(lastneg,i);}
            }
            if(neg%2==0) return r-l+1;
            return max({r-fneg,lastneg-l});
        }
        // Function to return the length of the
        //longest subarray with ppositive product
        int maxLength(vector<int> &arr,int n){
           //code here
           int l=0,ans=0;
           while(l<n && arr[l]==0) l++;
           for(int i=l;i<n;i++)
           {
               if(arr[i]==0)
               {
                   ans=max(ans,solve(arr,l,i-1));
                   l=i+1;
               }
           }
           ans=max(ans,solve(arr,l,n-1));
           return ans;
        }
};

//{ Driver Code Starts.

int main() {
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    vector<int> arr(n);
	    for(int i = 0;i<n;i++){
	        cin>>arr[i];
	    }
	    Solution ob;
	    int res = ob.maxLength(arr,n);
	    cout<<res<<"\n";
	}
	return 0;
}
// } Driver Code Ends
