class Solution{
  public:
  bool solve(int a[],int n,int k,vector<bool> &vis,int sum,int curr_sum,int idx)
  {
      if(k==1) return true;
      if(sum==curr_sum)
      {
          return solve(a,n,k-1,vis,sum,0,0);
      }
      for(int j=idx;j<n;j++)
      {
          if(!vis[j] && curr_sum+a[j]<=sum)
          {
              vis[j]=true;
              if(solve(a,n,k,vis,sum,curr_sum+a[j],j+1)) return true;
              vis[j]=false;
          }
      }
  }
    bool isKPartitionPossible(int a[], int n, int k)
    {
         //Your code here
         int sum=0;
         int maxi=0;
         for(int i=0;i<n;i++)
         {
             sum+=a[i];
             maxi=max(maxi,a[i]);
         }
         if(sum%k>0 || n<k || maxi>sum/k) return false;
         vector<bool> vis(n,false);
         return solve(a,n,k,vis,sum,0,0);
    }
};
