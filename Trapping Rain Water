class Solution{

    // Function to find the trapped water between the blocks.
    public:
    long long trappingWater(int arr[], int n){
        // code here
        int leftmax[n]={0};
        int rightmax[n]={0};
        leftmax[0]=0;
        rightmax[n-1]={0};
        for(int i=1;i<n;i++)
        {
            leftmax[i]=max(leftmax[i-1],arr[i-1]);
        }
        for(int i=n-2;i>=0;i--)
        {
            rightmax[i]=max(rightmax[i+1],arr[i+1]);
        }
        // for(int i=0;i<n;i++) cout<<leftmax[i]<<" ";
        // cout<<"\n";
        // for(int i=0;i<n;i++) cout<<rightmax[i]<<" ";
        long long ans =0;
        for(int i=1;i<n-1;i++)
        {
            int k = min(leftmax[i],rightmax[i]) - arr[i];
            if(k>0) ans += k;
        }
        return ans;
    }
};
