// TC is O(N . (logN)^2 )
int solve(int a[],int n,int mid)
{
    int ans=0;
    for(int i=0;i<n;i++)
    {
        ans += upper_bound(a+i,a+n,a[i]+mid) - (a+i+1);
    }
    return ans;
}
int kthDiff(int a[], int n, int k)
{
    sort(a,a+n);
    int low=INT_MAX;
    int high=a[n-1]-a[0];
    for(int i=1;i<n;i++) low=min(low,a[i]-a[i-1]);
    while(low<high)
    {
        int mid = low+(high-low)/2;
        if(solve(a,n,mid)<k) low=mid+1;
        else high=mid;
    }
    return low;
}
