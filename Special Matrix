class Solution {
public:
	int FindWays(int n, int m, vector<vector<int>>blocked_cells){
	    // Code here
	    int mod=1000000007;
	    vector<vector<int>> dp(n,vector<int> (m,0));
	    for(auto &i:blocked_cells)
	    {
	        dp[i[0]-1][i[1]-1]=-1;
	    }
	    if(dp[n-1][m-1]==-1) return 0;
	    if(dp[0][0]==-1) return 0;
	    vector<vector<int>> ans(n,vector<int> (m,0));
	    ans[0][0]=1;
	    for(int i=0;i<n;i++)
	    {
	        for(int j=0;j<m;j++)
	        {
	            if(dp[i][j]==-1) ans[i][j]=0;
	            else
	            {
	                if(i-1>=0)
	                    ans[i][j]+=ans[i-1][j];
	                ans[i][j]%=mod;
	                if(j-1>=0)
	                    ans[i][j]+=ans[i][j-1];
	                ans[i][j]%=mod;
	            }
	        }
	    }
	    return ans[n-1][m-1];
	}
};
