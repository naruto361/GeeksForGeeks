class Solution{
public:	
	string addBinary(string A, string B)
	{
	    // your code here
	    int m=A.length() , n=B.length();
	    if(m<n)
	    {
	        reverse(A.begin(),A.end());
	        int k=n-m;
	        while(k--) A+=('0');
	        reverse(A.begin(),A.end());
	    }
	    if(n<m)
	    {
	        reverse(B.begin(),B.end());
	        int k=m-n;
	        while(k--) B+=('0');
	        reverse(B.begin(),B.end());
	    }
	  //  cout<<A<<' '<<B<<' ';
	    int sz=A.length();
	    int carry=0;
	    string ans;
	    for(int i=sz-1;i>=0;i--)
	    {
	        int a=A[i]-'0';
	        int b=B[i]-'0';
	        if(carry==0)
	        {
	            if(a==0 && b==0) ans += '0';
	            else if(a==1 && b==1) {ans += '0';carry=1;}
	            else ans+='1';
	        }
	        else
	        {
	            if(a==0 && b==0) ans += '1',carry=0;
	            else if(a==1 && b==1) {ans += '1';carry=1;}
	            else ans+='0',carry=1;
	        }
	    }
	    if(carry>0) ans += '1';
	    while(ans.length()>0 && ans.back()=='0') ans.pop_back();
	    reverse(ans.begin(),ans.end());
	    return ans;
	}
};
