class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool dfs(int node,vector<int> adj[],vector<bool> &vis,vector<bool> &st)
    {
        vis[node]=true;
        st[node]=true;
        for(auto &child:adj[node])
        {
            if(!vis[child])
            {
                if(dfs(child,adj,vis,st)) return true;
            }
            else
            {
                if(st[child]) return true;
            }
        }
        st[node]=false;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<bool> vis(V,false) , st(V,false);
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                if(dfs(i,adj,vis,st)) return true;
            }
        }
        return false;
    }
};
