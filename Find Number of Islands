class Solution {
  public:
    // Function to find the number of islands.
    vector<int> dx={1,0,0,-1,1,-1,1,-1};
    vector<int> dy={0,1,-1,0,1,-1,-1,1};
    bool valid(int i,int j,int m,int n)
    {
        if(i<0 || j<0 || i>=m || j>=n) return false;
        return true;
    }
    void dfs(int i,int j,int m,int n,vector<vector<char>> &grid)
    {
        if(!valid(i,j,m,n) || grid[i][j]!='1') return ;
        grid[i][j]='0';
        for(int k=0;k<8;k++)
        {
            dfs(i+dx[k],j+dy[k],m,n,grid);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int m=grid.size() , n=grid[0].size();
        int cnt=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]=='1')
                {
                    cnt++;
                    dfs(i,j,m,n,grid);
                }
            }
        }
        return cnt;
    }
};
