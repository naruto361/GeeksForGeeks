class Solution {
  public:
    // Function to count paths between two vertices in a directed graph.
    vector<vector<int>> ans;
    void solve(vector<int> &temp,int V, vector<int> adj[],int idx ,int destination)
    {
        temp.push_back(idx);
        if(idx==destination)
        {
            ans.push_back(temp);
            temp.pop_back();
            return ;
        }
        for(int i=0;i<adj[idx].size();i++)
        {
            solve(temp,V,adj,adj[idx][i],destination);
        }
        temp.pop_back();
        
    }
    int countPaths(int V, vector<int> adj[], int source, int destination) {
        vector<int> temp;
        
        solve(temp,V,adj,source,destination);
        // for(int i=0;i<ans.size();i++)
        // {
        //     for(auto &j:ans[i]) cout<<j<<" ";
        //     cout<<'\n';
        // }
        return ans.size();
    }
};
