class Solution{
private:
    bool isPalin(int f,int l,string s)
    {
        while(f<l)
        {
            if(s[f] != s[l]) return false;
            f++;l--;
        }
        return true;
    }
    int solve(string &str,int i,int j,vector<vector<int>> &dp)
    {
        if(j<=i) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        if(isPalin(i,j,str)) return 0;
        int ans=INT_MAX;
        for(int k=i;k<=j;k++)
        {
            if(isPalin(i,k,str))
            {
                ans=min(ans,1+solve(str,k+1,j,dp));
            }
        }
        return dp[i][j]=ans;
    }
public:
    int palindromicPartition(string str)
    {
        int n=str.length();
        if(isPalin(0,n-1,str)) return 0;
        vector<vector<int>> dp(n,vector<int> (n,-1));
        return solve(str,0,n-1,dp);
    }
};
